Lang {
  Recipe
    = "#Equipment" Requirement* "#Ingredients" Requirement* "#Steps" Step*
  Requirement
    = QuantifiedNoun ("," Adjectives)? ("as" Noun)? "."
  Step = SubStep ("and" SubStep)* "."
  SubStep
    = Adverbs? Verb StepNouns
      StepWith?
      StepLocator?
      StepAt?
      StepFor?
      StepUntil?
  StepWith = "with" QuantifiedNouns
  StepLocator = Locator Noun
  StepAt = "at" Level
  StepFor = "for" Duration
  StepUntil = "until" StepPredicate
  StepPredicate
    = "temperature" spaces "is" Temperature -- temperature
    | Noun "is" Adjectives -- nounAdjectives
    | Adjectives -- adjectives
  StepNouns
    = "it" -- it
    | "everything" -- everything
    | QuantifiedNouns -- nouns

  QuantifiedNouns = QuantifiedNoun ("," QuantifiedNoun)*
  QuantifiedNoun
    = Quantity "-" Quantity Noun -- range
    | Quantity Noun -- quantified
    | Noun -- unquantified
  Quantity
    = "all" -- all
    | "few" UnitNoun -- fewUnit
    | "few" -- few
    | Number UnitNoun -- numberUnit
    | Number -- number

  Duration
    = DurationRange -- range
    | DurationSingle -- single
  DurationRange = DurationSingle "-" DurationSingle
  DurationSingle = Number UnitNoun
  Temperature = Number TempUnit
  TempUnit = "F" | "C" | "K"
  Number
    = Integer "/" Integer -- fraction
    | Integer "." Integer -- decimal
    | Integer -- integer
  Integer = digit+

  Locator = "in" | "on" | "over" | "to"
  Level = "low" | "medium-low" | "medium" |  "medium-high" | "high" | "max"
  Adjectives = Adjective ("," Adjective)*
  Adverbs = Adverb ("," Adverb)*
  Noun = pascalCase
  Verb = pascalCase
  UnitNoun = camelCase
  Adjective = camelCase
  Adverb = camelCase
  pascalCase = upper letter*
  camelCase = lower letter*
}
